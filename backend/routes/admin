const express = require('express');
const router = express.Router();
const mongoose = require('mongoose');

// MongoDB Schema for Events (Now includes a time field)
const eventSchema = new mongoose.Schema({
  title: String,
  description: String,
  date: Date,
  time: String,
  location: String,
});

const Event = mongoose.model('Event', eventSchema);

// Admin Add Event Route
router.post('/addevent', async (req, res) => {
  const { title, description, date, time, location } = req.body;

  if (!title || !date || !time || !location) {
    return res.status(400).json({ error: 'Missing required fields (title, date, time, location).' });
  }

  try {
    const newEvent = new Event({
      title,
      description,
      date: new Date(date),
      time,
      location,
    });

    await newEvent.save();
    res.status(200).json({ message: 'Event added successfully!' });
  } catch (error) {
    console.error('❌ Error adding event:', error.message || error);
    res.status(500).json({ error: 'Server error. Please try again later.' });
  }
});

// Fetch Upcoming Events
router.get('/events', async (req, res) => {
  try {
    const events = await Event.find({}).sort({ date: 1 });

    return res.status(200).json({ events });
  } catch (error) {
    console.error('❌ Error fetching events:', error.message || error);
    return res.status(500).json({ error: 'An unexpected error occurred. Please try again later.' });
  }
});

module.exports = router;
